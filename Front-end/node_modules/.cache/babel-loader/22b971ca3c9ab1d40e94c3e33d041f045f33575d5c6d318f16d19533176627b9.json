{"ast":null,"code":"import { fetchUsersFromApi, postUserToApi, upDateUserToApi, deleteUserFromApi } from \"../Services/Api\";\nimport { fetchUsersFromLocalDb, saveUserToLocalDb, deleteUserFromLocalDb } from \"../Services/localDb\";\nexport const GET_USERS = \"GET_USERS\";\nexport const ADD_USER = \"ADD_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const SAVE_USER = \"SAVE_USER\";\nexport const saveUser = userData => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return {\n    type: SAVE_USER,\n    payload: userData\n  };\n};\nexport const getUsers = () => async dispatch => {\n  try {\n    // Check if there are records in the local database\n    const localDbUsers = fetchUsersFromLocalDb();\n    if (localDbUsers.length > 0) {\n      dispatch({\n        type: GET_USERS,\n        payload: localDbUsers\n      });\n    } else {\n      // If local database is empty, fetch from the API\n      const apiUsers = await fetchUsersFromApi();\n      dispatch({\n        type: GET_USERS,\n        payload: apiUsers\n      });\n      // Save API data to local database for future use\n      apiUsers.forEach(user => saveUserToLocalDb(user));\n    }\n  } catch (error) {\n    console.error(\"Error fetching users:\", error);\n  }\n};\nexport const addUser = userData => dispatch => {\n  // Add user to the local database and dispatch action\n  saveUserToLocalDb(userData);\n  dispatch({\n    type: ADD_USER,\n    payload: userData\n  });\n  postUserToApi(userData);\n};\nexport const updateUser = updatedUser => dispatch => {\n  // Add user to the local database and dispatch action\n  saveUserToLocalDb(updatedUser);\n  dispatch({\n    type: ADD_USER,\n    payload: updatedUser\n  });\n  upDateUserToApi(updatedUser);\n};\nexport const deleteUser = userId => dispatch => {\n  // Delete user from the local database and dispatch action\n  deleteUserFromLocalDb(userId);\n  dispatch({\n    type: DELETE_USER,\n    payload: userId\n  });\n  deleteUserFromApi(userId);\n};\n\n// Add other actions as needed (edit, view details, etc.)","map":{"version":3,"names":["fetchUsersFromApi","postUserToApi","upDateUserToApi","deleteUserFromApi","fetchUsersFromLocalDb","saveUserToLocalDb","deleteUserFromLocalDb","GET_USERS","ADD_USER","DELETE_USER","SAVE_USER","saveUser","userData","localStorage","setItem","JSON","stringify","type","payload","getUsers","dispatch","localDbUsers","length","apiUsers","forEach","user","error","console","addUser","updateUser","updatedUser","deleteUser","userId"],"sources":["C:/Users/Santosh Kommanapalli/OneDrive/Desktop/users-dashboard/front-end/src/actions/actions.js"],"sourcesContent":["import {\r\n  fetchUsersFromApi,\r\n  postUserToApi,\r\n  upDateUserToApi,\r\n  deleteUserFromApi,\r\n} from \"../Services/Api\";\r\nimport {\r\n  fetchUsersFromLocalDb,\r\n  saveUserToLocalDb,\r\n  deleteUserFromLocalDb,\r\n} from \"../Services/localDb\";\r\n\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const SAVE_USER = \"SAVE_USER\";\r\n\r\nexport const saveUser = (userData) => {\r\n  localStorage.setItem(\"user\", JSON.stringify(userData));\r\n  return { type: SAVE_USER, payload: userData };\r\n};\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    // Check if there are records in the local database\r\n    const localDbUsers = fetchUsersFromLocalDb();\r\n    if (localDbUsers.length > 0) {\r\n      dispatch({ type: GET_USERS, payload: localDbUsers });\r\n    } else {\r\n      // If local database is empty, fetch from the API\r\n      const apiUsers = await fetchUsersFromApi();\r\n      dispatch({ type: GET_USERS, payload: apiUsers });\r\n      // Save API data to local database for future use\r\n      apiUsers.forEach((user) => saveUserToLocalDb(user));\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n  }\r\n};\r\n\r\nexport const addUser = (userData) => (dispatch) => {\r\n  // Add user to the local database and dispatch action\r\n  saveUserToLocalDb(userData);\r\n  dispatch({ type: ADD_USER, payload: userData });\r\n  postUserToApi(userData);\r\n};\r\nexport const updateUser = (updatedUser) => (dispatch) => {\r\n  // Add user to the local database and dispatch action\r\n  saveUserToLocalDb(updatedUser);\r\n  dispatch({ type: ADD_USER, payload: updatedUser });\r\n  upDateUserToApi(updatedUser);\r\n};\r\n\r\nexport const deleteUser = (userId) => (dispatch) => {\r\n  // Delete user from the local database and dispatch action\r\n  deleteUserFromLocalDb(userId);\r\n  dispatch({ type: DELETE_USER, payload: userId });\r\n  deleteUserFromApi(userId);\r\n};\r\n\r\n// Add other actions as needed (edit, view details, etc.)\r\n"],"mappings":"AAAA,SACEA,iBAAiB,EACjBC,aAAa,EACbC,eAAe,EACfC,iBAAiB,QACZ,iBAAiB;AACxB,SACEC,qBAAqB,EACrBC,iBAAiB,EACjBC,qBAAqB,QAChB,qBAAqB;AAE5B,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,SAAS,GAAG,WAAW;AAEpC,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EACpCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;EACtD,OAAO;IAAEK,IAAI,EAAEP,SAAS;IAAEQ,OAAO,EAAEN;EAAS,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACF;IACA,MAAMC,YAAY,GAAGjB,qBAAqB,CAAC,CAAC;IAC5C,IAAIiB,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3BF,QAAQ,CAAC;QAAEH,IAAI,EAAEV,SAAS;QAAEW,OAAO,EAAEG;MAAa,CAAC,CAAC;IACtD,CAAC,MAAM;MACL;MACA,MAAME,QAAQ,GAAG,MAAMvB,iBAAiB,CAAC,CAAC;MAC1CoB,QAAQ,CAAC;QAAEH,IAAI,EAAEV,SAAS;QAAEW,OAAO,EAAEK;MAAS,CAAC,CAAC;MAChD;MACAA,QAAQ,CAACC,OAAO,CAAEC,IAAI,IAAKpB,iBAAiB,CAACoB,IAAI,CAAC,CAAC;IACrD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC;AAED,OAAO,MAAME,OAAO,GAAIhB,QAAQ,IAAMQ,QAAQ,IAAK;EACjD;EACAf,iBAAiB,CAACO,QAAQ,CAAC;EAC3BQ,QAAQ,CAAC;IAAEH,IAAI,EAAET,QAAQ;IAAEU,OAAO,EAAEN;EAAS,CAAC,CAAC;EAC/CX,aAAa,CAACW,QAAQ,CAAC;AACzB,CAAC;AACD,OAAO,MAAMiB,UAAU,GAAIC,WAAW,IAAMV,QAAQ,IAAK;EACvD;EACAf,iBAAiB,CAACyB,WAAW,CAAC;EAC9BV,QAAQ,CAAC;IAAEH,IAAI,EAAET,QAAQ;IAAEU,OAAO,EAAEY;EAAY,CAAC,CAAC;EAClD5B,eAAe,CAAC4B,WAAW,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAMZ,QAAQ,IAAK;EAClD;EACAd,qBAAqB,CAAC0B,MAAM,CAAC;EAC7BZ,QAAQ,CAAC;IAAEH,IAAI,EAAER,WAAW;IAAES,OAAO,EAAEc;EAAO,CAAC,CAAC;EAChD7B,iBAAiB,CAAC6B,MAAM,CAAC;AAC3B,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}