{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Kommanapalli\\\\OneDrive\\\\Desktop\\\\demo\\\\front-end\\\\src\\\\components\\\\form-rederer-components\\\\comprehensionQuestion-render.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComprehensionForm = () => {\n  _s();\n  const initialData = [{\n    ComprehensionNumber: \"Question 3\",\n    title: \"Water Cycle\",\n    passage: \"Whether you're preparing for your first job interview or aiming to upskill in this ever-evolving tech landscape, GeeksforGeeks Courses are your key to success. We provide top-quality content at affordable prices, all geared towards accelerating your growth in a time-bound manner. Join the millions we've already empowered, and we're here to do the same for you. Don't miss out - check it out now!\",\n    questions: [{\n      questionNumber: \"Question 3.1\",\n      question: \"all geared towards accelerating\",\n      Options: {\n        option1: \"Option 1\",\n        option2: \"Option 2\",\n        option3: \"Option 3\",\n        option4: \"Option 4\"\n      }\n    }, {\n      questionNumber: \"Question 3.2\",\n      question: \"all geared towards accelerating\",\n      Options: {\n        option1: \"Option 1\",\n        option2: \"Option 2\",\n        option3: \"Option 3\",\n        option4: \"Option 4\"\n      }\n    }]\n  }];\n  const [formData, setFormData] = useState(initialData);\n  console.log(formData);\n  const handleOptionChange = (questionIndex, optionIndex) => {\n    setFormData(prevFormData => {\n      const newFormData = [...prevFormData];\n      newFormData[0].questions[questionIndex].selectedOption = `Option ${optionIndex + 1}`;\n      return newFormData;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-slate-50 shadow-md p-2 flex-auto flex-col h-auto w-full flex  justify-center mb-4 gap-4\",\n    children: formData.map((eachQuestion, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border m-2 p-2 gap-4 questionContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"questionNumber \",\n        children: eachQuestion.ComprehensionNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"text-3xl text-green-50 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-bold\",\n          children: eachQuestion.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"passage\",\n          children: eachQuestion.passage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), eachQuestion.questions.map((eachQuestion, innerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border m-2 p-2 gap-4 questionContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: eachQuestion.questionNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: eachQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), Object.values(eachQuestion.Options).map((eachOption, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: eachQuestion.selectedOption === `Option ${optionIndex + 1}`,\n            onChange: () => handleOptionChange(innerIndex, optionIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: eachOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this))]\n      }, eachQuestion.questionNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))]\n    }, eachQuestion.ComprehensionNumber, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ComprehensionForm, \"aUQXCWgXcdHioxACkCJha6AD3Ao=\");\n_c = ComprehensionForm;\nexport default ComprehensionForm;\nvar _c;\n$RefreshReg$(_c, \"ComprehensionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ComprehensionForm","_s","initialData","ComprehensionNumber","title","passage","questions","questionNumber","question","Options","option1","option2","option3","option4","formData","setFormData","console","log","handleOptionChange","questionIndex","optionIndex","prevFormData","newFormData","selectedOption","className","children","map","eachQuestion","fileName","_jsxFileName","lineNumber","columnNumber","innerIndex","Object","values","eachOption","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Kommanapalli/OneDrive/Desktop/demo/front-end/src/components/form-rederer-components/comprehensionQuestion-render.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ComprehensionForm = () => {\r\n  const initialData = [\r\n    {\r\n      ComprehensionNumber: \"Question 3\",\r\n      title: \"Water Cycle\",\r\n      passage:\r\n        \"Whether you're preparing for your first job interview or aiming to upskill in this ever-evolving tech landscape, GeeksforGeeks Courses are your key to success. We provide top-quality content at affordable prices, all geared towards accelerating your growth in a time-bound manner. Join the millions we've already empowered, and we're here to do the same for you. Don't miss out - check it out now!\",\r\n      questions: [\r\n        {\r\n          questionNumber: \"Question 3.1\",\r\n          question: \"all geared towards accelerating\",\r\n          Options: {\r\n            option1: \"Option 1\",\r\n            option2: \"Option 2\",\r\n            option3: \"Option 3\",\r\n            option4: \"Option 4\",\r\n          },\r\n        },\r\n        {\r\n          questionNumber: \"Question 3.2\",\r\n          question: \"all geared towards accelerating\",\r\n          Options: {\r\n            option1: \"Option 1\",\r\n            option2: \"Option 2\",\r\n            option3: \"Option 3\",\r\n            option4: \"Option 4\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [formData, setFormData] = useState(initialData);\r\n  console.log(formData);\r\n\r\n  const handleOptionChange = (questionIndex, optionIndex) => {\r\n    setFormData((prevFormData) => {\r\n      const newFormData = [...prevFormData];\r\n      newFormData[0].questions[questionIndex].selectedOption = `Option ${\r\n        optionIndex + 1\r\n      }`;\r\n      return newFormData;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-slate-50 shadow-md p-2 flex-auto flex-col h-auto w-full flex  justify-center mb-4 gap-4\">\r\n      {formData.map((eachQuestion, questionIndex) => (\r\n        <div\r\n          key={eachQuestion.ComprehensionNumber}\r\n          className=\"border m-2 p-2 gap-4 questionContainer\"\r\n        >\r\n          <h1 className=\"questionNumber \">\r\n            {eachQuestion.ComprehensionNumber}\r\n          </h1>\r\n          <hr className=\"text-3xl text-green-50 w-full\" />\r\n          <div className=\"flex flex-col gap-2\">\r\n            <h1 className=\"font-bold\">{eachQuestion.title}</h1>\r\n            <p className=\"passage\">{eachQuestion.passage}</p>\r\n          </div>\r\n          {eachQuestion.questions.map((eachQuestion, innerIndex) => (\r\n            <div\r\n              key={eachQuestion.questionNumber}\r\n              className=\"border m-2 p-2 gap-4 questionContainer\"\r\n            >\r\n              <p>{eachQuestion.questionNumber}</p>\r\n              <p>{eachQuestion.question}</p>\r\n              {Object.values(eachQuestion.Options).map(\r\n                (eachOption, optionIndex) => (\r\n                  <div key={optionIndex} className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      checked={\r\n                        eachQuestion.selectedOption ===\r\n                        `Option ${optionIndex + 1}`\r\n                      }\r\n                      onChange={() =>\r\n                        handleOptionChange(innerIndex, optionIndex)\r\n                      }\r\n                    />\r\n                    <p>{eachOption}</p>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComprehensionForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}