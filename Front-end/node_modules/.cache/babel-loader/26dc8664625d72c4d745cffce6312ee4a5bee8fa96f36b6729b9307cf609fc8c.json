{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santosh Kommanapalli\\\\OneDrive\\\\Desktop\\\\users-dashboard\\\\front-end\\\\src\\\\components\\\\dashoboard\\\\EditUserDetails\\\\EditUserDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateUser } from \"../../../actions/actions\";\nimport \"./styles.scss\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Header from \"../../header/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditUserDetails = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const users = useSelector(state => state.users);\n  const user = users.find(eachUser => eachUser._id === userId); // Use find instead of filter\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n\n  // Check if user[0] exists before accessing its properties\n  const userName = user ? user.name : \"\";\n  const userEmail = user ? user.email : \"\";\n  const userMobile = user ? user.mobile : \"\";\n  const handleUpdateUser = () => {\n    const createdAt = new Date();\n    const updatedUser = {\n      name,\n      email,\n      mobile,\n      createdAt\n    };\n    dispatch(updateUser(updatedUser));\n    navigate(\"/dashboard\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n_s(EditUserDetails, \"gBgQR/4pLDv1aR+zz2Q825rzZ8M=\", false, function () {\n  return [useParams, useSelector, useDispatch, useNavigate];\n});\n_c = EditUserDetails;\nexport default EditUserDetails;\nvar _c;\n$RefreshReg$(_c, \"EditUserDetails\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","updateUser","Link","useParams","useNavigate","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUserDetails","_s","userId","users","state","user","find","eachUser","_id","dispatch","navigate","name","setName","email","setEmail","mobile","setMobile","userName","userEmail","userMobile","handleUpdateUser","createdAt","Date","updatedUser","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Santosh Kommanapalli/OneDrive/Desktop/users-dashboard/front-end/src/components/dashoboard/EditUserDetails/EditUserDetails.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateUser } from \"../../../actions/actions\";\r\nimport \"./styles.scss\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../header/header\";\r\n\r\nconst EditUserDetails = () => {\r\n  const { userId } = useParams();\r\n  const users = useSelector((state) => state.users);\r\n  const user = users.find((eachUser) => eachUser._id === userId); // Use find instead of filter\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n\r\n  // Check if user[0] exists before accessing its properties\r\n  const userName = user ? user.name : \"\";\r\n  const userEmail = user ? user.email : \"\";\r\n  const userMobile = user ? user.mobile : \"\";\r\n\r\n  const handleUpdateUser = () => {\r\n    const createdAt = new Date();\r\n    const updatedUser = { name, email, mobile, createdAt };\r\n    dispatch(updateUser(updatedUser));\r\n    navigate(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n   <><Header/></>\r\n  );\r\n};\r\n\r\nexport default EditUserDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,OAAO,eAAe;AACtB,SAASC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC9B,MAAMU,KAAK,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,IAAI,GAAGF,KAAK,CAACG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,GAAG,KAAKN,MAAM,CAAC,CAAC,CAAC;EAChE,MAAMO,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAMoB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAM6B,QAAQ,GAAGZ,IAAI,GAAGA,IAAI,CAACM,IAAI,GAAG,EAAE;EACtC,MAAMO,SAAS,GAAGb,IAAI,GAAGA,IAAI,CAACQ,KAAK,GAAG,EAAE;EACxC,MAAMM,UAAU,GAAGd,IAAI,GAAGA,IAAI,CAACU,MAAM,GAAG,EAAE;EAE1C,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5B,MAAMC,WAAW,GAAG;MAAEZ,IAAI;MAAEE,KAAK;MAAEE,MAAM;MAAEM;IAAU,CAAC;IACtDZ,QAAQ,CAAClB,UAAU,CAACgC,WAAW,CAAC,CAAC;IACjCb,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,oBACCb,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eAAE3B,OAAA,CAACF,MAAM;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAAE,CAAC;AAEjB,CAAC;AAAC3B,EAAA,CAzBID,eAAe;EAAA,QACAP,SAAS,EACdJ,WAAW,EAERC,WAAW,EACXI,WAAW;AAAA;AAAAmC,EAAA,GALxB7B,eAAe;AA2BrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}